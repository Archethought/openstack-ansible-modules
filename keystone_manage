#!/usr/bin/python
# -*- coding: utf-8 -*-

DOCUMENTATION = '''
---
module: keystone_manage
short_description: Initialize OpenStack Identity (keystone) database
options:
  action:
    description:
      - action to perform. Currently only dbysnc is supported
    required: true
requirements: [ keystone ]
examples:
    - code: keystone_manage action=dbsync

author: Lorin Hochstein
'''
import subprocess

try:
    from keystone.common.sql import migration
    from migrate.versioning import api as versioning_api
except ImportError:
    keystone_found = False
else:
    keystone_found = True

def will_db_change():
    """Check if the database version will change after the sync """
    current_version = migration.db_version()
    repo_path = migration._find_migrate_repo()
    repo_version = int(versioning_api.repository.Repository(repo_path).latest)
    return current_version != repo_version


def do_dbsync():
    """Do the dbsync. Returns (returncode, stdout, stderr)"""
    # We shell out here to ensure everything maximu
    args = ['keystone-manage', 'db_sync']

    p = subprocess.Popen(args, shell=False,
                         stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    out, err = call.communicate()
    if call.returncode == 0:
        return 0, ''
    else:
        return (call.returncode, out, err)

def main():

    module = AnsibleModule(
        argument_spec=dict(
            action=dict(required=True)
        ),
        supports_check_mode=True
    )

    if not keystone_found:
        module.fail_json(msg="keystone package could not be found")

    action = module.params['action']
    if action not in ['dbsync', 'db_sync']:
        module.fail_json(msg="Only supported action is 'dbsync'")

    changed = will_db_change()
    if module.check_mode:
        module.exit_json(changed=changed)

    (res, stdout, stderr) = do_dbsync()
    if res==0:
        module.exit_json(changed=changed, stdout=stdout, stderr=stderr)
    else:
        module.fail_json(msg="keystone-manage returned non-zero value: %d" % res,
                         stdout=stdout, stderr=stderr)

# this is magic, see lib/ansible/module_common.py
#<<INCLUDE_ANSIBLE_MODULE_COMMON>>
main()
